# Define 'Service' to expose backend application deployment
apiVersion: v1
kind: Service
metadata:
  name: springboot-jpa-mysql
spec:
  selector:  # backend application pod labels should match these
    app: to-do-app
    tier: backend
  ports:
    - protocol: "TCP"
      port: 9090
      targetPort: 9090
  type: NodePort   # use NodePort, if you are not running Kubernetes on cloud
---
# Configure 'Deployment' of backend application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-jpa-mysql
  labels:
    app: springboot-jpa-mysql-label
    tier: backend
spec:
  replicas: 2    # Number of replicas of back-end application to be deployed
  selector:
    matchLabels: # backend application pod labels should match these
      app: springboot-jpa-mysql-label
      tier: backend
  template:
    metadata:
      labels: # Must macth 'Service' and 'Deployment' labels
        app: springboot-jpa-mysql-label
        tier: backend
    spec:
      containers:
        - name: springboot-jpa-mysql
          image: adarshkumarsingh83/springboot-jpa-mysql  # docker image of backend application
          env:   # Setting environmental Variables
            - name: DATABASE_HOST   # Setting Database host address from configMap
              valueFrom:
                configMapKeyRef:
                  name: db-conf  # name of configMap
                  key: host
            - name: DATABASE_NAME  # Setting Database name from configMap
              valueFrom:
                configMapKeyRef:
                  name: db-conf
                  key: name
            - name: DATABASE_PORT  # Setting Database port from configMap
              valueFrom:
                configMapKeyRef:
                  name: db-conf
                  key: port
            - name: DATABASE_USER  # Setting Database username from Secret
              valueFrom:
                secretKeyRef:
                  name: db-credentials # Secret Name
                  key: username
            - name: DATABASE_PASSWORD # Setting Database password from Secret
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: password
          ports:
            - containerPort: 9090