========================================================================================================================
MAVEN BUILD PROCESS
========================================================================================================================

# build cmd for whole project
$ mvn clean package

========================================================================================================================
DOCKER PROCESS
========================================================================================================================
........................................................................................................................
#To build and start the docker containers
........................................................................................................................
$ docker-compose up


........................................................................................................................
TO BUILD
........................................................................................................................

cd espark-eureka-server
docker build -f Dockerfile -t adarshkumarsingh83/espark-eureka-server .

cd ..
cd espark-config-server
docker build -f Dockerfile -t adarshkumarsingh83/espark-config-server .

cd ..
cd espark-api-gateway
docker build -f Dockerfile -t adarshkumarsingh83/espark-api-gateway .

cd ..
cd espark-address-service
docker build -f Dockerfile -t adarshkumarsingh83/espark-address-service .

cd ..
cd espark-employee-service
docker build -f Dockerfile -t adarshkumarsingh83/espark-employee-service .

cd ..
cd espark-api-service
docker build -f Dockerfile -t adarshkumarsingh83/espark-api-service .

........................................................................................................................
TO PUSH TO DOCKER HUB
........................................................................................................................

docker push adarshkumarsingh83/espark-eureka-server &
docker push adarshkumarsingh83/espark-config-server &
docker push adarshkumarsingh83/espark-api-gateway &
docker push adarshkumarsingh83/espark-address-service &
docker push adarshkumarsingh83/espark-employee-service &
docker push adarshkumarsingh83/espark-api-service
........................................................................................................................


## TO TEST THE API 

$ curl localhost:8080/api/employee/1

$ curl localhost:8080/api/address/1

$ curl localhost:8080/api/details/1

$ curl localhost:8080/api/details


#TO LIST DOWN ALL THE IMAGES
$ docker images

#TO LIST ALL THE PROCESS
$ docker ps -a

# TO DELETE ALL THE CONTAINERS WITH VOLUMES
$ docker rm -vf $(docker ps -a -q)

# TO DELETE ALL THE IMAGES
$ docker rmi -f $(docker images -a -q)

========================================================================================================================
KUBERNETES
========================================================================================================================
$  kubectl cluster-info

$ mkdir kubernates
$ cd kubernates

........................................................................................................................
#To create a eureka deployment file
$ kubectl create deployment espark-eureka-server --image=adarshkumarsingh83/espark-eureka-server --dry-run -o=yaml > eureka-server.yaml

#to add separator in the file
$ echo --- >> eureka-server.yaml

#To create a service cluster
$ kubectl create service clusterip espark-eureka-server --tcp=8761:8761 --dry-run -o=yaml >> eureka-server.yaml

$ kubectl apply -f eureka-server.yaml

$ kubectl get all

$ kubectl describe pod/xxxx

........................................................................................................................
#To create a config deployment file
$ kubectl create deployment espark-config-server --image=adarshkumarsingh83/espark-config-server --dry-run -o=yaml > config-server.yaml

#to add separator in the file
$ echo --- >> config-server.yaml

#To create a service cluster
$ kubectl create service clusterip espark-config-server --tcp=8888:8888 --dry-run -o=yaml >> config-server.yaml

$ kubectl apply -f config-server.yaml

$ kubectl get all

$ kubectl describe pod/xxxx

........................................................................................................................

#To create a espark-address-service deployment file
$ kubectl create deployment espark-address-service --image=adarshkumarsingh83/espark-address-service --dry-run -o=yaml > address-service.yaml

$ kubectl apply -f address-service.yaml

$ kubectl get all

$ kubectl describe pod/xxxx
........................................................................................................................
#To create a espark-employee-service deployment file
$ kubectl create deployment espark-employee-service --image=adarshkumarsingh83/espark-employee-service --dry-run -o=yaml > employee-service.yaml

$ kubectl apply -f employee-service.yaml

$ kubectl get all

$ kubectl describe pod/xxxx


........................................................................................................................
#To create a espark-api-service deployment file
$ kubectl create deployment espark-api-service --image=adarshkumarsingh83/espark-api-service --dry-run -o=yaml > api-service.yaml

$ kubectl apply -f api-service.yaml

$ kubectl get all

$ kubectl describe pod/xxxx
........................................................................................................................
$ kubectl create deployment espark-api-gateway --image=adarshkumarsingh83/espark-api-gateway --dry-run -o=yaml > api-gateway.yaml

#to add separator in the file
$ echo --- >> api-gateway.yaml

#To create a service cluster
$ kubectl create service clusterip espark-api-gateway  --tcp=8080:8080  --dry-run -o=yaml >> api-gateway.yaml

#NOTE
change the espark-api-gateway.yaml
spec:
    type: LoadBalancer

$ kubectl apply -f api-gateway.yaml

$ kubectl get all

$ kubectl describe pod/xxxx

$ kubectl port-forward service/espark-api-gateway 8080:8080
crt+c

kubectl describe services/espark-api-gateway

........................................................................................................................

$ kubectl describe services/<service-name>
get the ip and port and hit it

$ kubectl get all

$ kubectl describe pods

------------------------------------------------------------------------------------------------------------------------

$ kubectl exec -it <container-name> -- /bin/bash

$ kubectl get all

$ kubectl delete service/<service-name>

$ kubectl delete deployment/<service-name>

$ kubectl delete services xxxx

$ kubectl delete deployment xxxx
========================================================================================================================

 $ kubectl delete service/espark-api-gateway
 $ kubectl delete service/espark-config-server
 $ kubectl delete service/espark-eureka-server

 $ kubectl delete deployment.apps/espark-address-service
 $ kubectl delete deployment.apps/espark-api-gateway
 $ kubectl delete deployment.apps/espark-api-service
 $ kubectl delete deployment.apps/espark-config-server
 $ kubectl delete deployment.apps/espark-employee-service
 $ kubectl delete deployment.apps/espark-eureka-server


 # To Open Dashboard if minikube is started
 $ minikube dashboard


  $ minikube ip


