# Define 'Service' to expose backend application deployment
apiVersion: v1
kind: Service
metadata:
  name: springboot-rabbitmq-processor
  namespace: default
spec:
  selector:  # backend application pod labels should match these
    app: springboot-rabbitmq-processor-label
    tier: backend
  ports:
    - protocol: TCP
      port: 8899
      targetPort: 8899
  type: LoadBalancer   # use NodePort, if you are not running Kubernetes on cloud
---
# Configure 'Deployment' of backend application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-rabbitmq-processor
  labels:
    app: springboot-rabbitmq-processor-label
    tier: backend
spec:
  replicas: 1    # Number of replicas of back-end application to be deployed
  selector:
    matchLabels: # backend application pod labels should match these
      app: springboot-rabbitmq-processor-label
      tier: backend
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' labels
        app: springboot-rabbitmq-processor-label
        tier: backend
    spec:
      containers:
        - name: springboot-rabbitmq-processor
          image: adarshkumarsingh83/rabbitmq-processor  # docker image of backend application
          imagePullPolicy: Always
          ports:
            - containerPort: 8899
          env:   # Setting environmental Variables
            - name: SPRING_PROFILES_ACTIVE
              value: rabbit-container
            - name: RABBITMQ_HOST   # Setting Database host address from configMap
              valueFrom:
                configMapKeyRef:
                  name: rabbit-conf # name of configMap
                  key: host
            - name: RABBITMQ_PORT  # Setting Database name from configMap
              valueFrom:
                configMapKeyRef:
                  name: rabbit-conf
                  key: port
            - name: RABBITMQ_USER  # Setting Database username from Secret
              valueFrom:
                secretKeyRef:
                  name: rabbit-secret # Secret Name
                  key: username
            - name: RABBITMQ_PASSWORD # Setting Database password from Secret
              valueFrom:
                secretKeyRef:
                  name: rabbit-secret
                  key: password
            - name: RABBITMQ_GROUP
              valueFrom:
                configMapKeyRef:
                  name: rabbit-conf
                  key: rabbitmq_group
            - name: RABBITMQ_SOURCE
              valueFrom:
                configMapKeyRef:
                  name: rabbit-conf
                  key: rabbitmq_queue
            - name: RABBITMQ_DESTINATION
              valueFrom:
                configMapKeyRef:
                  name: rabbit-conf
                  key: rabbitmq_queue_processed                  