apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-service1
spec:
  selector:
    matchLabels:
      app: springboot-service1
      tier: backend
      track: stable
  replicas: 1
  template:
    metadata:
      labels:
        app: springboot-service1
        tier: backend
        track: stable
    spec:
      containers:
        - name: springboot-service1
          image: "adarshkumarsingh83/springboot-service"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
          env: # Setting environmental Variables
            - name: SPRING_PROFILES_ACTIVE
              value: kubernates
            - name: LOGGING_FILE_PATH
              value: /var/logs/
            - name: LOGGING_FILE_NAME
              value: /var/logs/app.logs
            - name: LOGGGER_LEVEL_ROOT
              value: INFO
          volumeMounts:
            - mountPath: /var/logs/
              name: logs
        - name: logstash
          image: docker.elastic.co/logstash/logstash:7.13.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
          volumeMounts:
            - name: config-volume
              mountPath: /usr/share/logstash/config
            - name: logstash-pipeline-volume
              mountPath: /usr/share/logstash/pipeline
            - name: logs
              mountPath: /var/logs/
      volumes:
        - name: config-volume
          configMap:
            name: service-logstash-configmap
            items:
              - key: logstash.yml
                path: logstash.yml
        - name: logstash-pipeline-volume
          configMap:
            name: service-logstash-configmap
            items:
              - key: logstash.conf
                path: logstash.conf
        - name: logs
          emptyDir: {}
              
---

apiVersion: v1
kind: Service
metadata:
  name: springboot-service1
spec:
  selector:
    app: springboot-service1
    tier: backend
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  type: LoadBalancer