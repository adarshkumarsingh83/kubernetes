# https://javiermugueta.blog/2018/11/27/deploying-an-oracle-database-in-oracle-kubernetes-engine-with-persistence/
# external IP of the service created and set up a new connection
#  user/pwd => sys/Oradoc_db1
# sid    ORCLCDB
# prt    1521
#  kubectl apply -f $(pwd)/oracle-db12.yml
#  kubectl delete services oracle-db-12
#  kubectl delete deployment oracle-db-12
#  kubectl delete pvc oracle-pv-volume

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: oracle-pv-volume
  labels:
    app: oracle-db-12
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: oci
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oracle-db-12
  labels:
    app: oracle-db-12
spec:
  selector:
    matchLabels:
      app: oracle-db-12
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: oracle-db-12
    spec:
      containers:
      - image: container-registry.oracle.com/database/enterprise:12.2.0.1
        name: oracle-db
        ports:
        - containerPort: 1521
          name: oracle-db
        volumeMounts:
        - name: data
          mountPath: /ORCL
      imagePullSecrets:
        - name: oradocreg
      securityContext:
        runAsNonRoot: true
        runAsUser: 54321
        fsGroup: 54321
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: oracle-pv-volume
---
apiVersion: v1
kind: Service
metadata:
 name: oracle-db-12
spec:
 type: LoadBalancer
 ports:
   - name: client
     protocol: TCP
     port: 1521
     nodePort: 31521
 selector:
   app: oracle-db-12
