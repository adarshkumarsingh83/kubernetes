apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: kafka
      name: kafka
    spec:
      ports:
        - name: "9092"
          port: 9092
          targetPort: 9092
      selector:
        io.kompose.service: kafka
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: zookeeper
      name: zookeeper
    spec:
      ports:
        - name: "2181"
          port: 2181
          targetPort: 2181
      selector:
        io.kompose.service: zookeeper
    status:
      loadBalancer: {}
  -  apiVersion: apps/v1
     kind: StatefulSet
     metadata:
       name: kafka
     spec:
       serviceName: kafka
       replicas: 1
       template:
         metadata:
           labels:
             app: kafka
             io.kompose.service: kafka
         spec:
           initContainers:
             - name: volume-permissions
               image: busybox
               command: ['sh', '-c', 'chmod -R g+rwX /bitnami']
               volumeMounts:
                 - mountPath: /bitnami
                   name: kafka-data
           terminationGracePeriodSeconds: 10
           containers:
             - name: kafka
               image: bitnami/kafka:latest
               imagePullPolicy: IfNotPresent
               env:
                 - name: KAFKA_ZOOKEEPER_CONNECT
                   value: zookeeper:2181
                 - name: ALLOW_PLAINTEXT_LISTENER
                   value: "yes"
               ports:
                 - containerPort: 9092
               resources: {}
               volumeMounts:
                 - name: kafka-data
                   mountPath: /bitnami/kafka
       volumeClaimTemplates:
         - metadata:
             name: kafka-data
           spec:
             accessModes: [ "ReadWriteOnce" ]
             resources:
               requests:
                 storage: 1Gi
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: kafka-data
      name: kafka-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      name: zookeeper
    spec:
      replicas: 1
      strategy:
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            io.kompose.service: zookeeper
        spec:
          initContainers:
            - name: volume-permissions
              image: busybox
              command: ['sh', '-c', 'chmod -R g+rwX /bitnami']
              volumeMounts:
                - mountPath: /bitnami
                  name: zookeeper-data
          containers:
            - image: bitnami/zookeeper:latest
              name: zookeeper
              env:
                - name: ALLOW_ANONYMOUS_LOGIN
                  value: "yes"
              ports:
                - containerPort: 2181
              resources: {}
              volumeMounts:
                - mountPath: /bitnami/zookeeper
                  name: zookeeper-data
          restartPolicy: Always
          volumes:
            - name: zookeeper-data
              persistentVolumeClaim:
                claimName: zookeeper-data
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: zookeeper-data
      name: zookeeper-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
kind: List
metadata: {}