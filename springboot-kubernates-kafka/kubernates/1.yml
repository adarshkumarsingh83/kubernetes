apiVersion: v1
kind: Service
metadata:
  name: kafka
  labels:
    io.kompose.service: kafka
spec:
  ports:
    - name: "9092"
      port: 9092
      targetPort: 9092
  selector:
    io.kompose.service: kafka
  type: LoadBalancer

---

apiVersion: apps/v1
 kind: StatefulSet
 metadata:
   name: kafka
 spec:
   serviceName: kafka
   replicas: 1
   template:
     metadata:
       labels:
         app: kafka
         io.kompose.service: kafka
     spec:
       initContainers:
         - name: volume-permissions
           image: busybox
           command: ['sh', '-c', 'chmod -R g+rwX /bitnami']
           volumeMounts:
             - mountPath: /bitnami
               name: kafka-data
       terminationGracePeriodSeconds: 10
       containers:
         - name: kafka
           image: bitnami/kafka:latest
           imagePullPolicy: IfNotPresent
           env:
             - name: KAFKA_ZOOKEEPER_CONNECT
               value: zookeeper:2181
             - name: ALLOW_PLAINTEXT_LISTENER
               value: "yes"
           ports:
             - containerPort: 9092
           volumeMounts:
             - name: kafka-data
               mountPath: /bitnami/kafka
   volumeClaimTemplates:
     - metadata:
         name: kafka-data
       spec:
         accessModes: [ "ReadWriteOnce" ]
         resources:
           requests:
             storage: 1Gi
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: kafka-data
  name: kafka-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi