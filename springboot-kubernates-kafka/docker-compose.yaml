version: "3.1"

services:

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_CREATE_TOPICS=espark-topic
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - spring-ms

  espark-mysql:
    container_name: espark-mysql
    image: mysql:5.7
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=espark
      - MYSQL_USER=espark-root
      - MYSQL_PASSWORD=espark-root
    ports:
      - 3306:3306
    volumes:
      - /data/espark-mysql
    networks:
      - spring-ms
    depends_on:
      - kafka

  springboot-kafka-consumer:
    image: springboot-kafka-consumer
    build:
      context: ./springboot-kafka-consumer
      dockerfile: Dockerfile
    restart: on-failure:5
    volumes:
      - /data/springboot-kafka-consumer
    ports:
      - 9191:9191
    links:
      - kafka
      - espark-mysql
    depends_on:
      - kafka
      - espark-mysql
    environment:
      - DATABASE_HOST=espark-mysql
      - DATABASE_PORT=3306
      - DATABASE_NAME=espark
      - DATABASE_USER=espark-root
      - DATABASE_PASSWORD=espark-root
      - KAFKA-URL=kafka:9092
    networks:
      - spring-ms

  springboot-kafka-producer:
      image: springboot-kafka-producer
      build:
        context: ./springboot-kafka-producer
        dockerfile: Dockerfile
      restart: on-failure:5
      volumes:
        - /data/springboot-kafka-producer
      ports:
        - 8181:8181
      links:
        - kafka
        - espark-mysql
      depends_on:
        - kafka
        - espark-mysql
      environment:
        - KAFKA-URL=kafka:9092
      networks:
        - spring-ms

networks:
  spring-ms: